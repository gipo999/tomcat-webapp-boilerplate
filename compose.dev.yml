# TODO: possibly use only compose with 1 container with nodemon and tomcat
#
# this is a dev only compose file that will be used to start the services needed
# and provide live reload for the tomcat webapp by running npm run dev
#
# network mode exposes the service directly to the host, no mapping needed
# requires ports available on the host

services:
  tomcat-webapp-boilerplate:
    build:
      dockerfile: ./Dockerfile
    container_name: tomcat-webapp-boilerplate
    env_file: ./.env
    develop:
      # watch allows to sync files from host to container
      # When we run npm run dev, it will start the container and build the war.
      # on every war change, it will sync the war to the container and tomcat automatically restarts the app
      watch:
        - action: sync+restart
          path: "./build/libs/"
          target: "/usr/local/tomcat/webapps/"
    # for ease of use, we forward the tomcat port to the host
    network_mode: host
  ########## postgres
  postgresdev:
    env_file: ./.env
    image: postgres:latest@sha256:d0f363f8366fbc3f52d172c6e76bc27151c3d643b870e1062b4e8bfe65baf609
    # restart: unless-stopped
    network_mode: host
    container_name: postgresdev
    volumes:
      #     - ~/data/postgres:/var/lib/postgresql/data
      - /tmp/db/psql:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: ${PSQL_USER} # default
      POSTGRES_PASSWORD: ${PSQL_PASSWORD}
      POSTGRES_DB: ${PSQL_DATABASE_NAME}
  pgadmin:
    container_name: pgadmin4_container
    image: dpage/pgadmin4:latest@sha256:585350593e8b0483941fa9a2d5ebb04b88a66e83a7b5603c169f9446b271312f
    # restart: unless-stopped
    network_mode: host
    depends_on:
      - postgresdev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com #pragma: allowlist secret
      PGADMIN_DEFAULT_PASSWORD: admin #pragma: allowlist secret
      # PGADMIN_LISTEN_PORT: 9001
    # ports:
    #   - 127.0.0.1:9001:80
  ########## redis
  redisdev:
    env_file: ./.env
    image: redis/redis-stack:latest@sha256:dabd731cfebd2a7721ff1918257e08bff2b66963b938e796916cac53542ad003
    # user: redis
    # restart: unless-stopped
    network_mode: host
    # ports:
    #   - 127.0.0.1:6379:6379
    #   - 127.0.0.1:9002:8001 # redis insight
    container_name: redisdev
    # volumes:
    # - /tmp/db/redis:/data
    environment:
      # default user is: default
      - REDIS_ARGS=--save 60 1000 --appendonly yes --loglevel warning --requirepass ${REDIS_PASSWORD}
